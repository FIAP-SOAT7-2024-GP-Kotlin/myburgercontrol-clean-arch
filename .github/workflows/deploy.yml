name: CD Pipeline with Terraform (DigitalOcean)

on:
  push:
    branches:
      - main
      - feature/start-deploy-actions
  pull_request:
    branches:
      - main
jobs:
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # Autenticação com a DigitalOcean
      - name: Set up DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN_ACCESS }}

      # Autenticação com a DigitalOcean
      - name: Set up DigitalOcean
        run: |
          doctl vpcs list

#      # Criar um Droplet (opcional)
#      - name: Create a Droplet
#        run: |
#          doctl compute droplet create <droplet-name> --size <size> --image <image> --region <region>
#          doctl compute droplet create --image docker-20-04 --size s-1vcpu-1gb --region nyc1 --vpc-uuid ba5f81a6-5df2-4149-ad14-10cb12440d95 soat7myburger
#      # Autenticação com o cluster Kubernetes
#      - name: Set up Kubernetes
#        run: |
#          doctl kubernetes cluster kubeconfig save <cluster-name>
#
#      # Aplicar os manifests do Kubernetes ou usar Helm
#      - name: Deploy to Kubernetes
#        run: |
#          kubectl apply -f k8s/
#
#      # Verificar o status dos pods
#      - name: Check pod status
#        run: kubectl rollout status deployment <deployment-name>
