name: CD [MyBurguer ≡] (DigitalOcean)

on:
  push:
    branches:
      - main
      - feature/start-deploy-actions
jobs:
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: soat7myburger # Defina o nome do cluster aqui

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Autenticação com a DigitalOcean
      - name: Set up DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_TOKEN_ACCESS }}

      # Listar as VPCs e obter o ID da primeira VPC
      - name: Get VPC ID
        run: |
          VPC_ID=$(doctl vpcs list --format ID --no-header | head -n 1)
          echo "VPC ID: $VPC_ID"
          echo "VPC_ID=$VPC_ID" >> $GITHUB_ENV

      # Criar um Droplet (opcional)
      - name: Create a Droplet
        run: |
          doctl kubernetes cluster create ${{ env.PROJECT_NAME }}-k8s --node-pool "name=${{ env.PROJECT_NAME }}-node-pool;size=s-2vcpu-4gb;count=1;auto-scale=true;min-nodes=1;max-nodes=3" --region nyc3 --vpc-uuid ${{ env.VPC_ID }}

      # Armazenar o ID do primeiro cluster na variável de ambiente
      - name: Get First Cluster ID
        run: |
          CLUSTER_ID=$(doctl kubernetes cluster list --format ID --no-header | head -n 1)
          echo "CLUSTER_ID=$CLUSTER_ID" >> $GITHUB_ENV

      # Autenticação com o cluster Kubernetes
      - name: Set up Kubernetes
        run: |
          doctl kubernetes cluster kubeconfig save ${{ env.CLUSTER_ID }}

      # Aplicar os manifests do Kubernetes ou usar Helm
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/app/myburger-deployment.yaml

      # Armazenar o nome do deployment na variável de ambiente
      - name: Get Deployment Name
        run: |
          kubectl get deployments
          DEPLOYMENT_NAME=$(kubectl get deployments -o jsonpath='{.items[0].metadata.name}')
          echo "DEPLOYMENT_NAME=$DEPLOYMENT_NAME" >> $GITHUB_ENV

      # Verificar o status dos pods
      - name: Check pod status
        run: kubectl rollout status deployment ${{ env.DEPLOYMENT_NAME }}
